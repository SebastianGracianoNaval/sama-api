<div class="row">
    <div class="col-12">
        <div class="descarga-reportes mb-4">
            <h2>Descargar reportes consolidados</h2>
            <!-- Alerta de exportación mejorada -->
            <div id="alertaExportacion" class="alert alert-danger d-flex align-items-center" style="display:none;" role="alert">
              <i class="bi bi-exclamation-triangle-fill me-2" style="font-size:1.5rem;"></i>
              <span id="textoAlertaExportacion">No hay datos para exportar.</span>
            </div>
            <!-- Filtros de fecha -->
            <form class="row g-2 align-items-end mb-3" onsubmit="return false;">
                <div class="col-auto">
                    <label for="fechaInicio" class="form-label mb-0">Fecha inicio</label>
                    <input type="date" class="form-control" id="fechaInicio" max="<%= new Date().toISOString().slice(0,10) %>">
                </div>
                <div class="col-auto">
                    <label for="fechaFin" class="form-label mb-0">Fecha fin</label>
                    <input type="date" class="form-control" id="fechaFin" max="<%= new Date().toISOString().slice(0,10) %>">
                </div>
                <div class="col-auto">
                    <button type="button" class="btn btn-secondary" onclick="limpiarFechas()">Limpiar</button>
                </div>
            </form>
            <!-- Botones de descarga -->
            <div class="btn-group" role="group">
                <a href="/descargar/mensajes" class="btn btn-success" onclick="return descargarConAlerta(this, event)">Mensajes</a>
                <a href="/descargar/contactos" class="btn btn-success" onclick="return descargarConAlerta(this, event)">Contactos</a>
                <a href="/descargar/eventos" class="btn btn-success" onclick="return descargarConAlerta(this, event)">Eventos</a>
                <a href="/descargar/todo" class="btn btn-primary" onclick="return descargarConAlerta(this, event)">TODO</a>
            </div>
        </div>

        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Últimos webhooks recibidos</h2>
            <button id="refreshBtn" class="btn btn-primary">
                <i class="bi bi-arrow-clockwise"></i> Actualizar
            </button>
        </div>

        <div class="webhook-container">
            <% if (webhooks.length === 0) { %>
                <div class="alert alert-info">
                    No se ha recibido ningún webhook aún.
                </div>
            <% } else { %>
                <div class="list-group">
                    <% webhooks.slice(-10).reverse().forEach((wh, i) => { %>
                        <div class="list-group-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">
                                    <%= wh.fecha %>
                                    <% if (wh.tipo && wh.tipo !== 'desconocido') { %>
                                        <span class="badge bg-info text-dark ms-2 text-uppercase"><%= wh.tipo %></span>
                                    <% } else { %>
                                        <span class="badge bg-secondary ms-2">Tipo desconocido</span>
                                    <% } %>
                                </small>
                            </div>
                            <pre class="mt-2"><code><%= JSON.stringify(wh.body, null, 2) %></code></pre>
                        </div>
                    <% }); %>
                </div>
            <% } %>
        </div>
    </div>
</div>

<script>
function mostrarAlertaExportacion(msg) {
    const alerta = document.getElementById('alertaExportacion');
    const texto = document.getElementById('textoAlertaExportacion');
    texto.textContent = msg || 'No hay datos para exportar.';
    alerta.style.display = 'flex';
    setTimeout(() => {
        alerta.style.display = 'none';
    }, 4000);
}
function limpiarFechas() {
    document.getElementById('fechaInicio').value = '';
    document.getElementById('fechaFin').value = '';
}
function descargarConAlerta(link, event) {
    event.preventDefault();
    const fechaInicio = document.getElementById('fechaInicio').value;
    const fechaFin = document.getElementById('fechaFin').value;
    const hoy = new Date().toISOString().slice(0,10);
    // Validación frontend
    if ((fechaInicio && fechaFin) && (fechaInicio > fechaFin)) {
        mostrarAlertaExportacion('La fecha de inicio no puede ser posterior a la fecha fin.');
        return false;
    }
    if ((fechaInicio && fechaInicio > hoy) || (fechaFin && fechaFin > hoy)) {
        mostrarAlertaExportacion('No se pueden seleccionar fechas futuras.');
        return false;
    }
    // Construir la URL con los parámetros de fecha si están presentes
    const url = new URL(link.href, window.location.origin);
    if (fechaInicio && fechaFin) {
        url.searchParams.set('fechaInicio', fechaInicio);
        url.searchParams.set('fechaFin', fechaFin);
    }
    fetch(url, { method: 'GET' })
        .then(response => {
            if (response.status === 404) {
                mostrarAlertaExportacion('No hay datos para el rango de fechas seleccionado.');
                return null;
            }
            if (response.status === 400) {
                response.text().then(msg => mostrarAlertaExportacion(msg));
                return null;
            }
            if (!response.ok) {
                mostrarAlertaExportacion('Error al descargar el archivo.');
                return null;
            }
            // Obtener el nombre del archivo del header
            const disposition = response.headers.get('Content-Disposition');
            let filename = 'reporte.csv';
            if (disposition && disposition.indexOf('filename=') !== -1) {
                filename = disposition.split('filename=')[1].replace(/"/g, '').trim();
            }
            return response.blob().then(blob => ({ blob, filename }));
        })
        .then(data => {
            if (data) {
                const urlBlob = window.URL.createObjectURL(data.blob);
                const a = document.createElement('a');
                a.href = urlBlob;
                a.download = data.filename;
                document.body.appendChild(a);
                a.click();
                a.remove();
                window.URL.revokeObjectURL(urlBlob);
            }
        });
    return false;
}
</script> 